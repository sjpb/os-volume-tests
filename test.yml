- hosts: localhost
  become: no
  gather_facts: no
  name: Create infra
  tags: infra
  tasks:
    - name: Initialise terraform
      command: terraform init
    - name: Destroy infra
      command: terraform destroy -auto-approve
    - name: Create infra
      command: terraform apply -auto-approve
    - meta: refresh_inventory # NB: must be here so 'hosts: all' in next play gets correct hosts

- hosts: all
  become: yes
  any_errors_fatal: false
  gather_facts: no
  tags: checks
  vars:
    lsblk_expected:
      - /var/lib/state
      - /exports/home
  tasks:
    
    - wait_for_connection:
    - name: Check volume attachments on initial creation
      command: lsblk
      register: lsblk_initial
    - assert:
        that: item in lsblk_initial.stdout
        fail_msg: "didn't find {{ item }} in lsblk after instance creation"
      loop: "{{ lsblk_expected }}"
    - reboot:
    - wait_for_connection:
        delay: 5
    - name: Check volume attachments after reboot
      command: lsblk
      register: lsblk_post_reboot
    - assert:
        that: item in lsblk_post_reboot.stdout
        fail_msg: "didn't find {{ item }} in lsblk after reboot"
      loop: "{{ lsblk_expected }}"
    - name: Write some data to both attached volumes
      copy:
        dest: "{{ item }}/testdata.txt"
        content: "test data for {{ item }}"
      loop: "{{ lsblk_expected }}"
    - name: Reimage instances
      command: "openstack server rebuild {{ inventory_hostname }}"
      delegate_to: localhost
      become: no
    - wait_for_connection:
        delay: 10
    - name: Check data is present on attached volume
      command: "grep 'test data for {{ item }}' {{ item }}/testdata.txt"
      loop: "{{ lsblk_expected }}"
      changed_when: false
